 #
 # This file is part of Burningwave Miscellaneous Services.
 #
 # Author: Roberto Gentili
 #
 # Hosted at: https://github.com/burningwave/miscellaneous-services
 #
 # --
 #
 # The MIT License (MIT)
 #
 # Copyright (c) 2022 Roberto Gentili
 #
 # Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 # documentation files (the "Software"), to deal in the Software without restriction, including without
 # limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 # the Software, and to permit persons to whom the Software is furnished to do so, subject to the following
 # conditions:
 #
 # The above copyright notice and this permission notice shall be included in all copies or substantial
 # portions of the Software.
 #
 # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
 # LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO
 # EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
 # AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
 # OR OTHER DEALINGS IN THE SOFTWARE.
 #
spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/postgres}
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD}
  jpa:
    properties:
      hibernate:
        jdbc.lob.non_contextual_creation: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp

springdoc:
  api-docs:
    path: /miscellaneous-services/api-docs
  swagger-ui:
    path: /miscellaneous-services/api-docs.html
 
application:
  authorization.token: ${APPLICATION_AUTHORIZATION_TOKEN}
  authorization.token.type: ${APPLICATION_AUTHORIZATION_TOKEN_TYPE:Basic}

nexus-connector:
  group:
    enabled: ${NEXUS_CONNECTOR_GROUP_ENABLED:true}
    config: ${NEXUS_CONNECTOR_GROUP_CONFIG} 

github-connector:
  enabled: ${GITHUB_CONNECTOR_ENABLED:true}
  host: ${GITHUB_CONNECTOR_HOST:api.github.com}
  authorization.token: ${GITHUB_CONNECTOR_AUTHORIZATION_TOKEN}
  authorization.token.type: ${GITHUB_CONNECTOR_AUTHORIZATION_TOKEN_TYPE:Bearer}
  cache.ttl: ${GITHUB_CONNECTOR_CACHE_TTL:86400000}

heroku-connector:
  authorization:
    token: ${HEROKU_CONNECTOR_AUTHORIZATION_TOKEN}
  remote:
    authorization:
      token: ${HEROKU_CONNECTOR_REMOTE_AUTHORIZATION_TOKEN}

cache:
  type: ${CACHE_TYPE:File system based}
  base-path: ${CACHE_BASE_PATH:${java.io.tmpdir}/Burningwave/miscellaneous-services/cache}
# base-path: ${CACHE_BASE_PATH:${user.home}/Burningwave/Cache}

scheduler:
  enabled: ${SCHEDULER_ENABLED:true}
  operations:
    - cron: ${SCHEDULER_OPERATIONS_PING_CRON:0 0/25 * * * *}
      zone: ${SCHEDULER_OPERATIONS_PING_ZONE:UTC}
      executable: applicationSelfConnector.ping
    - cron: ${SCHEDULER_OPERATIONS_SWITCH_TO_REMOTE_APP_CRON:-}
      zone: ${SCHEDULER_OPERATIONS_SWITCH_TO_REMOTE_APP_ZONE:UTC}
      executable: herokuConnector.switchToRemoteApp
    - cron: ${SCHEDULER_OPERATIONS_SSL_CONFIG_RELOAD_CRON:59 59 23 * * *}
      zone: ${SCHEDULER_OPERATIONS_SSL_CONFIG_RELOAD_ZONE:UTC}
      executable: sSLConfigReloader.execute

burningwave:
  core:
    static-component-container:
      managed-logger.repository: 'org.burningwave.core.SLF4JManagedLoggerRepository'
      modules:
        export-all-to-all: false
        
---
spring:
  profiles: ssl
server:
  port: ${SERVER_SSL_PORT:443}
  ssl:
    enabled: true
    key-store: ${SERVER_SSL_KEY_STORE:file:./config/keystore.p12}
    key-store-password: ${SERVER_SSL_KEY_STORE_PASSWORD:changeit}
    key-store-type: ${SERVER_SSL_KEY_STORE_TYPE:pkcs12}
    key-alias: ${SERVER_SSL_KEY_ALIAS:miscellaneous-services}
    key-password: ${SERVER_SSL_KEY_PASSWORD:changeit}
    http:
      port: ${SERVER_SSL_HTTP_PORT:80}